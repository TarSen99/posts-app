{"version":3,"sources":["store/constants/index.js","store/reducers/index.js","store/index.js","components/menu_config.js","components/Menu.jsx","components/Header.jsx","components/Footer.jsx","components/additional_components/PageHeader.jsx","components/list/ListItem.jsx","services/apiService.js","services/api.js","containers/PostList.jsx","store/actions/index.js","components/Home.jsx","components/PostComments.jsx","components/PostDetails.jsx","containers/Post.jsx","App.js","serviceWorker.js","index.js","assets/img/blog-header.jpeg"],"names":["GET_POSTS","GET_IMAGES","POST_DETAILS","SET_LOADER","initialState","posts","images","postDetails","loading","store","createStore","state","arguments","length","undefined","action","type","Object","objectSpread","payload","applyMiddleware","thunk","menu_config","title","link","Menu","react_default","a","createElement","className","MENU_ITEMS","map","item","key","react_router_dom","to","exact","activeClassName","Header","components_Menu","Footer","PageHeader","_ref","headerMainImg","src","headerImg","alt","ListItem","post","image","concat","id","download_url","api","ApiService","baseUrl","classCallCheck","this","url","simpleCall","axios","get","params","put","delete","getPosts","getImages","getPostDetails","getPostComments","getPostAuthor","PostList","props","dispatch","asyncToGenerator","regenerator_default","mark","_callee","getState","res","wrap","_context","prev","next","Promise","all","getPostsList","getImagesList","sent","data","console","log","t0","stop","_x","_x2","apply","_this$props","index","list_ListItem","React","Component","connect","Home","additional_components_PageHeader","containers_PostList","PostComments","_ref$comments","comments","comment","name","email","body","PostDetails","_props$details","details","authorDetails","author","_get","content","components_PostComments","Post","match","_ref2","_callee2","postDetailsResponse","postAuthorDetailsResponse","postAuthorDetails","postCommentsResponse","postComments","_context2","getPostInfo","userId","_x3","getPostsDetails","components_PostDetails","App","components_Header","react_router","path","component","components_Footer","Boolean","window","location","hostname","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c76a98e0.chunk.js","sourcesContent":["export const GET_POSTS = 'GET_POSTS'\r\nexport const GET_IMAGES = 'GET_IMAGES'\r\nexport const POST_DETAILS = 'POST_DETAILS'\r\nexport const SET_LOADER = 'SET_LOADER'","import {\r\n  GET_POSTS ,\r\n  GET_IMAGES,\r\n  POST_DETAILS,\r\n  SET_LOADER\r\n} from './../constants'\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  images: [],\r\n  postDetails: {},\r\n  loading: false\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload\r\n      };\r\n    case GET_IMAGES:\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      };\r\n    case POST_DETAILS:\r\n      return {\r\n        ...state,\r\n        postDetails: action.payload\r\n      };\r\n    case SET_LOADER:\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport { rootReducer };","import { createStore, applyMiddleware } from 'redux'\r\nimport { rootReducer } from './reducers'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","export default [\r\n  {\r\n    title: 'Home',\r\n    link: '/',\r\n  },\r\n  {\r\n    title: 'Contact us',\r\n    link: '/contact-us'\r\n  },\r\n  {\r\n    title: 'About',\r\n    link: '/about'\r\n  }\r\n];","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport MENU_ITEMS from './menu_config'\r\n\r\nconst Menu = () => (\r\n  <nav>\r\n    <ul className=\"header__menu\">\r\n      {\r\n        MENU_ITEMS.map(item => {\r\n          return (\r\n            <li className=\"header__menu-item\" key={item.link}>\r\n              <NavLink to={item.link} exact activeClassName=\"header__menu-item_selected\">\r\n                {item.title}\r\n              </NavLink>\r\n              <span className=\"header__menu-item__arrow\"></span>\r\n            </li>\r\n          )\r\n        })\r\n      }\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Menu","import React from 'react'\r\nimport Menu from './Menu'\r\nimport './../style/header.scss'\r\n\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <div className=\"container\">\r\n      <div className=\"header__content\">\r\n        <div className=\"header__logo\">\r\n          Logo\r\n        </div>\r\n\r\n        <Menu />\r\n      </div>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from 'react'\r\nimport Menu from './Menu'\r\n\r\nimport './../style/footer.scss'\r\n\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <div className=\"container\">\r\n      <div className=\"footer__content\">\r\n        <Menu />\r\n      </div>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;","import React from 'react'\r\nimport headerImg from \"../../assets/img/blog-header.jpeg\";\r\n\r\nconst PageHeader = ({ headerMainImg, title }) => (\r\n  <section className=\"menu__header-section\">\r\n    <div className=\"overlap\"></div>\r\n    <img src={headerImg || headerMainImg} alt=\"header-img\"/>\r\n    <h1>{title || 'Blog'}</h1>\r\n  </section>\r\n);\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ListItem = ({post, image}) => {\r\n  return (\r\n    <div className=\"post-list__item\">\r\n      <Link to={`posts/${post.id}`}>\r\n        <div className=\"post-list-item__img-container\">\r\n          <span className=\"hover-button\">More</span>\r\n          <img\r\n            src={image.download_url}\r\n            alt={post.title}\r\n            className=\"post-list-item__img\"\r\n          />\r\n        </div>\r\n      </Link>\r\n\r\n      <h4>\r\n        <Link to={`posts/${post.id}`}>\r\n          {post.title}\r\n        </Link>\r\n      </h4>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default ListItem","import axios from 'axios'\r\n\r\nconst BASE_URL = 'https://jsonplaceholder.typicode.com';\r\n\r\nclass ApiService {\r\n  constructor(baseUrl) {\r\n    this.url = baseUrl;\r\n  }\r\n\r\n  get(url, simpleCall) {\r\n    return axios.get(simpleCall ? url : `${this.url}${url}`)\r\n  }\r\n\r\n  post(url, params, simpleCall) {\r\n    return axios.post(simpleCall ? url : `${this.url}${url}`, params)\r\n  }\r\n\r\n  put(url, params, simpleCall) {\r\n    return axios.put(simpleCall ? url : `${this.url}${url}`, params)\r\n  }\r\n\r\n  delete(url, simpleCall) {\r\n    return axios.delete(simpleCall ? url : `${this.url}${url}`)\r\n  }\r\n}\r\n\r\nconst api = new ApiService(BASE_URL);\r\n\r\nexport default api;","import api from './apiService'\r\n\r\nconst getPosts = () => {\r\n  return api.get('/posts')\r\n};\r\n\r\nconst getImages = () => {\r\n  return api.get('https://picsum.photos/v2/list?limit=100', true);\r\n};\r\n\r\nconst getPostDetails = (id) => {\r\n  return api.get(`/posts/${id}`)\r\n};\r\n\r\nconst getPostComments = (id) => {\r\n  return api.get(`/comments?postId=${id}`)\r\n};\r\n\r\nconst getPostAuthor = (id) => {\r\n  return api.get(`/users/${id}`)\r\n};\r\n\r\nexport {\r\n  getPosts,\r\n  getImages,\r\n  getPostDetails,\r\n  getPostComments,\r\n  getPostAuthor\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport ListItem from '../components/list/ListItem'\r\nimport { getPosts } from \"../store/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n  return { posts: state.posts, loading: state.loading, images: state.images }\r\n};\r\n\r\nclass PostList extends React.Component{\r\n  componentDidMount() {\r\n    this.props.dispatch(getPosts())\r\n  }\r\n\r\n  render() {\r\n    const { loading, posts, images } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {\r\n          loading ?\r\n            <h1>LOADING...</h1> :\r\n            <div>\r\n              <h2 className=\"section-title\">Latest posts:</h2>\r\n              <div className=\"post-list-container\">\r\n                {\r\n                  posts.map((post, index) => {\r\n                    return (\r\n                      <ListItem post={post} image={images[index]} key={post.id}/>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PostList)","import {\r\n  GET_POSTS,\r\n  GET_IMAGES,\r\n  POST_DETAILS,\r\n  SET_LOADER\r\n} from './../constants'\r\n\r\nimport {\r\n  getPosts as getPostsList,\r\n  getImages as getImagesList,\r\n  getPostDetails as getPostInfo,\r\n  getPostComments,\r\n  getPostAuthor\r\n} from './../../services/api'\r\n\r\nexport function getPosts() {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: SET_LOADER, payload: true})\r\n\r\n      const res = await Promise.all([\r\n        getPostsList(),\r\n        getImagesList()\r\n      ]);\r\n\r\n      const posts = res[0].data;\r\n      const images = res[1].data;\r\n\r\n      console.log('posts')\r\n      console.log(posts)\r\n\r\n      dispatch({ type: GET_POSTS, payload: posts})\r\n      dispatch({ type: GET_IMAGES, payload: images})\r\n\r\n      dispatch({ type: SET_LOADER, payload: false})\r\n    } catch (e) {\r\n      throw e\r\n    }\r\n  }\r\n}\r\n\r\nexport function getPostsDetails(id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: SET_LOADER, payload: true})\r\n\r\n    try {\r\n      const postDetailsResponse = await getPostInfo(id)\r\n      const { data : postDetails } = postDetailsResponse\r\n\r\n      const postAuthorDetailsResponse = await getPostAuthor(postDetails.userId)\r\n      const { data : postAuthorDetails } = postAuthorDetailsResponse\r\n\r\n      const postCommentsResponse = await getPostComments(postDetails.id)\r\n      const { data : postComments } = postCommentsResponse\r\n\r\n      dispatch({\r\n        type: POST_DETAILS,\r\n        payload: {\r\n          postDetails: postDetails,\r\n          authorDetails: postAuthorDetails,\r\n          comments: postComments\r\n        }\r\n      });\r\n\r\n      dispatch({ type: SET_LOADER, payload: false})\r\n    } catch (e) {\r\n      throw e\r\n    }\r\n  }\r\n}\r\n\r\nexport function setLoader(value) {\r\n  return {\r\n    type: SET_LOADER,\r\n    payload: value\r\n  }\r\n}","import React from 'react'\r\nimport PageHeader from './additional_components/PageHeader'\r\nimport PostList from '../containers/PostList'\r\n\r\nimport './../style/home.scss'\r\n\r\nconst Home = () => (\r\n  <main>\r\n    <PageHeader />\r\n    <PostList />\r\n  </main>\r\n);\r\n\r\nexport default Home","import React from 'react';\r\n\r\nconst PostComments = ({ comments = [] }) => {\r\n  return (\r\n    <div>\r\n      <h3>Comments: </h3>\r\n\r\n      <ul className=\"comments-container\">\r\n        {\r\n          comments.map(comment => {\r\n            return (\r\n              <li key={`${comment.id}${comment.name}`}>\r\n                <div className=\"comment-header\">\r\n                  <h5 className=\"comment-title\">{ comment.name }</h5>\r\n                  <span className=\"email\">{ comment.email }</span>\r\n                </div>\r\n\r\n               <p>{ comment.body }</p>\r\n              </li>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default PostComments;","import React from 'react'\r\nimport _get from 'lodash/get'\r\n\r\nimport PageHeader from './additional_components/PageHeader'\r\nimport PostComments from './PostComments'\r\nimport './../style/post.scss'\r\n\r\nconst DEFAULT_AUTHOR_NAME = 'Incognito';\r\nconst DEFAULT_TITLE_VALUE = 'Article';\r\nconst DEFAULT_CONTENT_VALUE = 'No content';\r\n\r\nconst PostDetails = (props) => {\r\n  const { postDetails, authorDetails, comments } = props.details;\r\n\r\n  const author = _get(authorDetails, 'name', DEFAULT_AUTHOR_NAME)\r\n  const content = _get(postDetails, 'body', DEFAULT_CONTENT_VALUE)\r\n  const title = _get(postDetails, 'title', DEFAULT_TITLE_VALUE)\r\n\r\n  return (\r\n    <div className=\"post-details\">\r\n      <PageHeader title={title}/>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"post-description\">\r\n          <h4>Author: {author}</h4>\r\n            <p>\r\n              {\r\n                content\r\n              }\r\n            </p>\r\n\r\n          <PostComments comments={comments}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default PostDetails;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getPostsDetails } from \"../store/actions\";\r\n\r\nimport PostDetails from '../components/PostDetails'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    details: state.postDetails,\r\n    loading: state.loading\r\n  }\r\n};\r\n\r\nclass Post extends React.Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    this.props.dispatch(getPostsDetails(id))\r\n  }\r\n\r\n  render() {\r\n    const { details, loading } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          loading ?\r\n            <h1>LOADING ...</h1> :\r\n            <PostDetails details={details} />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Post)","import React from 'react';\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Home from './components/Home'\nimport Post from './containers/Post'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/posts/:id\" component={Post} />\n      </Switch>\n      <Footer />\n    </div>\n  )\n};\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from './store'\n\nimport './style/index.scss';\nimport './style/general.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/blog-header.79d48f8b.jpeg\";"],"sourceRoot":""}